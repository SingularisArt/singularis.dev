<script src="/js/flexsearch.js"></script>
<script>
  var index = new FlexSearch.Document({
    tokenize: "forward",
    cache: 100,
    document: {
      id: 'id',
      store: [
        "href", "title", "description"
      ],
      index: ["title", "description"]
    }
  });

  // Load index data asynchronously
  let dataStore = [];
  fetch("/search/index.json")
    .then(response => response.json())
    .then(data => {
      dataStore = data;
      data.forEach(item => {
        index.add({
          id: item.id,
          href: item.href,
          title: item.title,
          description: item.description,
          type: item.type,
          date: item.date
        });
      });
    })
    .catch(error => {
      console.error('Error fetching data:', error);
    });

  const searchIcon = document.querySelector('[data-open-modal]');
  const searchOverlay = document.querySelector('[data-modal]');
  var inputElement = document.getElementById('searchInput');
  var resultsElement = document.getElementById('searchResults');
  console.log(inputElement, resultsElement)

  // Toggle search overlay
  searchIcon.addEventListener('click', function () {
    searchOverlay.showModal();
    document.body.classList.add('modal-open');
    inputElement.focus();
  });

  // Close overlay on outside click
  searchOverlay.addEventListener('click', function (e) {
    if (e.target === searchOverlay) {
      searchOverlay.close();
      document.body.classList.remove('modal-open');
    }
  });

  // Search input event
  inputElement.addEventListener('input', function () {
    var query = inputElement.value;
    var results = index.search(query);

    // Clear previous results
    resultsElement.innerHTML = '';

    // Flatten and deduplicate the results
    var docIds = new Set();
    results.forEach(function (result) {
      if (result.result) {
        result.result.forEach(function (id) {
          docIds.add(id);
        });
      }
    });

    // Display search results
    docIds.forEach(function (docId) {
      // Find the document in the original data store
      var doc = dataStore.find(item => item.id === docId);
      if (doc) {
        var li = document.createElement('li');

        // Construct result display
        li.innerHTML = `
            <strong>${doc.title}</strong><br>
            <span>${doc.type} * ${doc.date}</span><br>
            ${doc.description ? `<p>${doc.description}</p>` : ''}
          `;

        li.onclick = function () {
          window.location.href = doc.href;
        };
        resultsElement.appendChild(li);
      }
    });
  });
</script>

<style>
  /* Style for the search input */
  #searchInput {
    width: 100%;
    padding: 10px;
    margin-bottom: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
  }

  /* Style for search results */
  #searchResults {
    list-style: none;
    padding: 0;
    max-height: 300px;
    overflow-y: auto;
  }

  #searchResults li {
    padding: 10px;
    border-bottom: 1px solid #ddd;
    cursor: pointer;
  }

  #searchResults li:hover {
    background-color: #f0f0f0;
  }
</style>
